drop table if exists goldusers_signup;
CREATE TABLE goldusers_signup(userid integer,gold_signup_date date); 

INSERT INTO goldusers_signup(userid,gold_signup_date) 
 VALUES (1,'09-22-2017'),
(3,'04-21-2017');

drop table if exists users;
CREATE TABLE users(userid integer,signup_date date); 

INSERT INTO users(userid,signup_date) 
 VALUES (1,'09-02-2014'),
(2,'01-15-2015'),
(3,'04-11-2014');

drop table if exists sales;
CREATE TABLE sales(userid integer,created_date date,product_id integer); 

INSERT INTO sales(userid,created_date,product_id) 
 VALUES (1,'04-19-2017',2),
(3,'12-18-2019',1),
(2,'07-20-2020',3),
(1,'10-23-2019',2),
(1,'03-19-2018',3),
(3,'12-20-2016',2),
(1,'11-09-2016',1),
(1,'05-20-2016',3),
(2,'09-24-2017',1),
(1,'03-11-2017',2),
(1,'03-11-2016',1),
(3,'11-10-2016',1),
(3,'12-07-2017',2),
(3,'12-15-2016',2),
(2,'11-08-2017',2),
(2,'09-10-2018',3);


drop table if exists product;
CREATE TABLE product(product_id integer,product_name text,price integer); 

INSERT INTO product(product_id,product_name,price) 
 VALUES
(1,'p1',980),
(2,'p2',870),
(3,'p3',330);


select * from sales;
select * from product;
select * from goldusers_signup;
select * from users;

--- WHAT IS THE TOTAL AMOUNT EACH CUSTOMER SPENT ON ZOMATO
SELECT userid,sum(price) as total_spent FROM sales a
INNER JOIN product p ON a.product_id = p.product_id
GROUP BY userid

--- HOW MANY DAYS HAS CUSTOMER VISITED ZOMATO
SELECT userid,count(distinct created_date) AS n_days FROM sales
GROUP BY userid

--- WHAT WAS THE FIRST PRODUCT PURCHASE BY EACH CUSTOMER
WITH cte AS(
SELECT userid,product_id,
RANK() OVER(PARTITION BY userid ORDER BY created_date) as rn
FROM sales)
SELECT userid,product_id FROM cte
WHERE rn = 1

--- WHAT IS THE MOST PURCHASED ITEM ON THE MENU AND HOW MANY TIMES IT PURCHASE BY ALL CUSTOMERS

SELECT userid,COUNT(product_id) AS most_sold_product FROM sales
WHERE product_id IN
(SELECT TOP 1 product_id  FROM sales
GROUP BY product_id
ORDER BY  COUNT(*) DESC) 
GROUP BY userid

--- WHICH ITEM IS MOST POPULAR FOR EACH CUSTOMER
with cte as (
select userid,product_id,rank() over (partition by userid order by cnt desc) as rn from(
SELECT userid,product_id,count(*) as cnt from sales
group by userid,product_id) as t)

select userid,product_id from cte 
where rn =1

--- WHAT ITEM  WAS PURCHASED FIRST BY THE CUSTOMER AFTER THEY BECOME A MEMBER?

select * from sales;
select * from goldusers_signup;

select userid,product_id from (
SELECT s.userid,product_id,
rank() over(partition by s.userid order by created_date) rn 
FROM sales s
join goldusers_signup g on s.userid = g.userid and s.created_date >= g.gold_signup_date) as t
where rn = 1

---  WHAT ITEM  WAS PURCHASED FIRST BY THE CUSTOMER BEFORE THEY BECOME A MEMBER?
select userid,product_id from (
SELECT s.userid,product_id,
rank() over(partition by s.userid order by created_date DESC) rn 
FROM sales s
join goldusers_signup g on s.userid = g.userid and s.created_date <= g.gold_signup_date) as t
where rn = 1

--- WHAT IS THE TOTAL ORDERS AND AMOUNT SPENT FOR EACH MEMEBER BEFORE THEY BECOME BECOME

WITH CTE as
(SELECT s.userid,s.product_id,
rank() over(partition by s.userid order by created_date DESC) rn 
FROM sales s
join goldusers_signup g on s.userid = g.userid and s.created_date <= g.gold_signup_date)

select c.userid,count(*) as total_order,sum(p.price) as total_spent_amount from cte c
join product p on c.product_id = p.product_id
group by c.userid
